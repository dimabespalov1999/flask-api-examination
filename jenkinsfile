// pipeline {
//     agent any
//
//     environment {
//         COMPOSE_FILE = 'docker-compose.yml'
//         VENV_DIR = 'venv'
//     }
//
//     stages {
//         stage('Checkout') {
//             steps {
//                 git branch: 'master', url: 'https://github.com/dimabespalov1999/flask_app_exam.git'
//             }
//         }
//
//         stage('Set up Python Environment') {
//             steps {
//                 sh '''
//                     apt update
//                     apt install -y python3.11-venv python3-pip
//                     python3 -m venv $VENV_DIR
//                     . $VENV_DIR/bin/activate
//                     pip install --upgrade pip
//                     pip install flake8 autopep8 pytest
//                 '''
//             }
//         }
//
//         stage('Lint and Auto-fix') {
//             steps {
//                 sh '''
//                     . $VENV_DIR/bin/activate
//                     export PYTHONPATH=$PYTHONPATH:$(pwd)
//
//                     echo "–ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é autopep8..."
//                     autopep8 --in-place --recursive app
//
//                     echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å flake8..."
//                     flake8 app || echo "—Ç–∏–ª—å –∫–æ–¥–∞ –Ω–∞—Ä—É—à–µ–Ω, –Ω–æ –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
//                 '''
//             }
//         }
//
//         stage('Run Tests') {
//             steps {
//                 sh '''
//                     . $VENV_DIR/bin/activate
//                     export PYTHONPATH=$PYTHONPATH:$(pwd)
//
//                     echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
//                     pytest tests/ || exit 1
//                 '''
//             }
//         }
//
//         stage('Build and Deploy') {
//             steps {
//                 echo '–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...'
//                 sh 'docker-compose down || true'
//                 sh 'docker-compose --env-file .env up -d --build'
//             }
//         }
//     }
//
//     post {
//         failure {
//             echo '‚ùå –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.'
//         }
//         success {
//             echo '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ.'
//         }
//     }
// }


pipeline {
    agent any

    environment {
        COMPOSE_FILE = 'docker-compose.yml'
        VENV_DIR = 'venv'
        ENV_FILE = '.env'
    }

    stages {
        stage('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è') {
            steps {
                git branch: 'master', url: 'https://github.com/dimabespalov1999/flask_app_exam.git'
            }
        }

        stage('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python-–æ–∫—Ä—É–∂–µ–Ω–∏—è') {
            steps {
                sh '''
                    apt update && apt install -y python3.11-venv python3-pip
                    python3 -m venv $VENV_DIR
                    . $VENV_DIR/bin/activate
                    pip install --upgrade pip
                    pip install flake8 autopep8 pytest
                '''
            }
        }

        stage('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è –∫–æ–¥–∞') {
            steps {
                sh '''
                    . $VENV_DIR/bin/activate
                    export PYTHONPATH=$(pwd)

                    echo "–ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é autopep8..."
                    autopep8 --in-place --recursive app

                    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é flake8..."
                    flake8 app || echo "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è flake8, –Ω–æ –ø–∞–π–ø–ª–∞–π–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è"
                '''
            }
        }

        stage('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤') {
            steps {
                sh '''
                    . $VENV_DIR/bin/activate
                    export PYTHONPATH=$(pwd)

                    echo "–ó–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤..."
                    pytest tests/
                '''
            }
        }

        stage('–°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤') {
            steps {
                sh '''
                    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
                    docker-compose down || true

                    echo "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
                    docker-compose --env-file $ENV_FILE up -d --build
                '''
            }
        }
    }

    post {
        failure {
            echo '–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.'
        }
        success {
            echo '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–æ –∏ –∑–∞–ø—É—â–µ–Ω–æ.'
        }
    }
}
